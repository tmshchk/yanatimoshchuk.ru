{"version":3,"file":"component---src-pages-index-js.js","mappings":"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","sources":["webpack://ssss/./src/components/about.module.scss","webpack://ssss/./src/components/footer.module.scss","webpack://ssss/./src/components/header.module.scss","webpack://ssss/./src/components/index.module.scss","webpack://ssss/../src/image-utils.ts","webpack://ssss/../src/components/hooks.ts","webpack://ssss/../src/components/picture.tsx","webpack://ssss/../src/components/placeholder.tsx","webpack://ssss/../src/components/main-image.tsx","webpack://ssss/../src/components/layout-wrapper.tsx","webpack://ssss/../src/components/gatsby-image.server.tsx","webpack://ssss/../src/components/static-image.server.tsx","webpack://ssss/./node_modules/gatsby-plugin-image/node_modules/camelcase/index.js","webpack://ssss/./src/components/footer.js","webpack://ssss/./src/components/header.js","webpack://ssss/./src/components/layout.js","webpack://ssss/./src/components/seo.js","webpack://ssss/./src/pages/index.js"],"sourcesContent":["// Exports\nexport var page = \"about-module--page--9ygNu\";\nexport var flex = \"about-module--flex--lD88d\";\nexport var photo = \"about-module--photo--sQuAk\";\nexport var diploma = \"about-module--diploma--dS0k2\";\nexport var blockPrice = \"about-module--block-price--vQboO\";\nexport var button = \"about-module--button---sGgB\";\nexport var price = \"about-module--price--xEmAN\";\n","// Exports\n","// Exports\nexport var activeLink = \"header-module--active-link--99V7O\";\n","// Exports\nexport var container = \"index-module--container--6+XCs\";\n","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Node & {\n  childImageSharp?: IGatsbyImageDataParent<Node>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (node: ImageDataLike): IGatsbyImageData | undefined => {\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React, { Fragment, FunctionComponent } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<ILayoutWrapperProps> =\n  function LayoutWrapper({ children, ...props }) {\n    return (\n      <Fragment>\n        <Sizer {...props} />\n        {children}\n\n        {SERVER ? <NativeScriptLoading /> : null}\n      </Fragment>\n    )\n  }\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[a-zA-Z]/.test(character) && character.toUpperCase() === character) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[a-zA-Z]/.test(character) && character.toLowerCase() === character) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLowerCase() === character && character.toUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toUpperCase() === character && character.toLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = Object.assign({\n\t\tpascalCase: false\n\t}, options);\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toUpperCase() : input.toLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLowerCase()\n\t\t.replace(/[_.\\- ]+(\\w|$)/g, (_, p1) => p1.toUpperCase())\n\t\t.replace(/\\d+(\\w|$)/g, m => m.toUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import * as React from 'react';\n\nimport './footer.module.scss';\n\nconst Footer = () => (\n  <footer>\n    <p>\n      Сделал с 💜{' '}\n      <a href=\"https://timoshchuk.ru\" rel=\"noreferrer\" target=\"_blank\">\n        Александр Тимощук\n      </a>\n    </p>\n  </footer>\n);\n\nexport default Footer;\n","import * as React from 'react';\nimport { Link } from 'gatsby';\nimport * as styles from '../components/header.module.scss';\n\nconst Header = () => {\n  return (\n    <header>\n      <nav>\n        <Link activeClassName={styles.activeLink} to=\"/\">\n          Обо мне\n        </Link>\n        <Link activeClassName={styles.activeLink} to=\"/blog\">\n          Статьи\n        </Link>\n        <Link activeClassName={styles.activeLink} to=\"/tags\">\n          Рубрики\n        </Link>\n        <Link activeClassName={styles.activeLink} to=\"/contacts\">\n          Контакты\n        </Link>\n      </nav>\n    </header>\n  );\n};\n\nexport default Header;\n","import * as React from 'react';\n\nimport Header from './header';\nimport Footer from './footer';\n\nconst Layout = ({ children }) => {\n  return (\n    <>\n      <Header />\n      {children}\n      <Footer />\n    </>\n  );\n};\n\nexport default Layout;\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction Seo({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n  const defaultTitle = site.siteMetadata?.title;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s / ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.author || ``,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  );\n}\n\nSeo.defaultProps = {\n  lang: `ru`,\n  meta: [],\n  description: ``,\n};\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n};\n\nexport default Seo;\n","import * as React from 'react';\nimport { StaticImage } from 'gatsby-plugin-image';\n\nimport Layout from '../components/layout';\nimport Seo from '../components/seo';\nimport * as about from '../components/about.module.scss';\nimport * as styles from '../components/index.module.scss';\n\nfunction IndexPage() {\n  const onClickButton = () => {\n    window.open(\n      'https://auth.robokassa.ru/Merchant/Index.aspx?MerchantLogin=timoshchuk&InvId=0&Culture=ru&Encoding=utf-8&Description=%D0%98%D0%BD%D0%B4%D0%B8%D0%B2%D0%B8%D0%B4%D1%83%D0%B0%D0%BB%D1%8C%D0%BD%D0%B0%D1%8F%20%D0%BA%D0%BE%D0%BD%D1%81%D1%83%D0%BB%D1%8C%D1%82%D0%B0%D1%86%D0%B8%D1%8F%20%D0%AF%D0%BD%D1%8B%20%D0%A2%D0%B8%D0%BC%D0%BE%D1%89%D1%83%D0%BA&OutSum=2000&SignatureValue=c6cee757e09f220f09edf9c734d99afb',\n      '_blank',\n    );\n  };\n\n  return (\n    <Layout>\n      <Seo title=\"Обо мне\" />\n      <main className={`${styles.container} ${about.page}`}>\n        <h1>\n          <span>Психологические консультации</span>\n          <br /> для детей и взрослых\n        </h1>\n        <div className={about.flex}>\n          <p>\n            Меня зовут <span>Яна Тимощук</span>.\n            <br />\n            <br />\n            Магистр психологии, психолог-практик, сказкотерапевт.\n            <br />\n            <br />\n            Веду частную практику: индивидуальные психологические консультации для детей, взрослых и\n            семейных пар.\n            <br />\n            <br />\n            Очные и групповые консультации веду в Краснодаре: ул. Ставропольская, 87/2 — детский\n            центр «Островок тепла».\n            <br />\n            <br />\n            Онлайн-консультации по всему миру: Скайп, Зум, Вацап.\n          </p>\n          <StaticImage\n            className={about.photo}\n            src=\"../images/yanatimoshchuk.png\"\n            alt=\"Яна Тимощук, психолог, сказкотерапевт\"\n            quality=\"100\"\n          />\n        </div>\n        <h2>Образование и дипломы</h2>\n        <ul>\n          <li>магистр психологии</li>\n          <li>автор книги «Измерение Добрых Измерений»</li>\n          <li>сертифицированный сказкотерапевт-консультант</li>\n          <li>автор методических пособий для педагогов и психологов</li>\n          <li>500+ проведенных индивидуальных консультаций, мастер-классов и курсов</li>\n        </ul>\n        <div className={about.flex}>\n          <StaticImage\n            className={about.diploma}\n            src=\"../images/d1.jpeg\"\n            alt=\"Диплом 1\"\n            quality=\"100\"\n          />\n          <StaticImage\n            className={about.diploma}\n            src=\"../images/d2.jpeg\"\n            alt=\"Диплом 2\"\n            quality=\"100\"\n          />\n          <StaticImage\n            className={about.diploma}\n            src=\"../images/d3.jpeg\"\n            alt=\"Диплом 3\"\n            quality=\"100\"\n          />\n        </div>\n        <h2>С чем ко мне обращаются</h2>\n        <ul>\n          <li>вопросы по отношениям</li>\n          <li>воспитание детей</li>\n          <li>адаптация к детскому саду</li>\n          <li>страхи и фобии</li>\n        </ul>\n        <h2>Методы работы</h2>\n        <ul>\n          <li>сказкотерапия</li>\n          <li>арт-терапия</li>\n          <li>песочная терапия</li>\n        </ul>\n        <h2>Как попасть на консультацию</h2>\n        <ul>\n          <li>оформите заказ, нажав на кнопку ниже</li>\n          <li>заполните анкету, которая откроется после оплаты</li>\n          <li>после изучения анкеты я свяжусь с вами для уточнения деталей и даты встречи</li>\n          <li>в согласованный день мы встречаемся с вами очно или онлайн</li>\n        </ul>\n        <div className={about.blockPrice}>\n          <button onClick={onClickButton} className={about.button}>\n            Оформить заказ\n          </button>\n          <p className={about.price}>2 000₽</p>\n        </div>\n      </main>\n    </Layout>\n  );\n}\n\nexport default IndexPage;\n"],"names":["message","warn","a","b","width","layout","images","map","src","image","join","filename","lastIndexOf","dot","slice","ext","length","args","height","sourceMetadata","breakpoints","aspectRatio","formats","toLowerCase","camelCase","Math","round","setDefaultDimensions","generateImageSource","format","fit","options","pluginName","reporter","backgroundColor","placeholderURL","formatFromFilename","size","has","add","calculateImageSizes","sources","sizes","getSizes","imageSizes","presentationWidth","forEach","imageSrc","filter","Boolean","find","unscaledWidth","unscaled","result","fallback","srcSet","getSrcSet","push","type","imageProps","placeholder","presentationHeight","values","from","sort","sortNumeric","imgDimensions","DEFAULT_BREAKPOINTS","Object","entries","_","erroneousUserDimensions","outputPixelDensities","DEFAULT_PIXEL_DENSITIES","dedupeAndSortDensities","getDimensionsAndAspectRatio","calculated","fixedDimension","densities","density","originalWidth","min","includes","dimensions","Number","MAX_SAFE_INTEGER","widthOption","heightOption","imageAspectRatio","max","GATSBY___IMAGE","node","gatsbyImageData","gatsbyImage","isGatsbyImageData","isGatsbyImageDataParent","isGatsbyImageParent","childImageSharp","getImage","gatsbyImageIsInstalled","wrapperStyle","position","overflow","display","verticalAlign","className","style","baseUrl","urlBuilder","sourceWidth","sourceHeight","props","EVERY_BREAKPOINT","isLoading","isLoaded","loading","left","top","transform","transition","willChange","shouldLoad","opacity","objectFit","objectPosition","bottom","right","defaultImage","artDirected","media","process","env","NODE_ENV","console","output","source","alt","decoding","undefined","React","Image","key","fallbackImage","propTypes","PropTypes","string","isRequired","bool","Picture","displayName","exact","arrayOf","oneOfType","Placeholder","propName","componentName","MainImage","dangerouslySetInnerHTML","__html","paddingTop","maxWidth","role","children","Fragment","Sizer","NativeScriptLoading","str","replace","as","preactClass","imgClassName","imgStyle","placeholderBackgroundColor","wStyle","wClass","wrapperProps","getWrapperProps","cleanedImages","removeNewLines","createElement","LayoutWrapper","getPlaceholderProps","getMainProps","GatsbyImage","__imageData","imageData","__error","_getStaticImage","GatsbyImageServer","number","checkDimensionProps","validLayouts","StaticImage","preserveCamelCase","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","character","test","toUpperCase","input","Array","isArray","TypeError","assign","pascalCase","postProcess","x","charAt","trim","hasUpperCase","p1","m","module","exports","default","Footer","Link","styles","Header","activeLink","Layout","Helmet","Seo","description","lang","meta","title","site","metaDescription","siteMetadata","defaultTitle","name","content","property","author","concat","defaultProps","object","about","IndexPage","onClickButton","window","open","container","page","flex","photo","diploma","blockPrice","button","price"],"sourceRoot":""}