{"version":3,"file":"component---src-templates-tags-js.js","mappings":";;;;;;;;;;AAAA;;;;;;;;;;;;;;;;ACAA;AACO;;;;;;;;;;;;;;;;;;ACDP;AACO;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACHP;AAEA;;AAEA,MAAMC,MAAM,GAAG,mBACb,8EACE,wHACc,GADd,eAEE;EAAG,IAAI,EAAC,uBAAR;EAAgC,GAAG,EAAC,YAApC;EAAiD,MAAM,EAAC;AAAxD,uGAFF,CADF,CADF;;AAWA,iEAAeA,MAAf;;;;;;;;;;;;;;;;;;;ACfA;AACA;AACA;;AAEA,MAAMG,MAAM,GAAG,MAAM;EACnB,oBACE,8EACE,2EACE,iDAAC,wCAAD;IAAM,eAAe,EAAED,sEAAvB;IAA0C,EAAE,EAAC;EAA7C,2CADF,eAIE,iDAAC,wCAAD;IAAM,eAAe,EAAEA,sEAAvB;IAA0C,EAAE,EAAC;EAA7C,0CAJF,eAOE,iDAAC,wCAAD;IAAM,eAAe,EAAEA,sEAAvB;IAA0C,EAAE,EAAC;EAA7C,gDAPF,eAUE,iDAAC,wCAAD;IAAM,eAAe,EAAEA,sEAAvB;IAA0C,EAAE,EAAC;EAA7C,sDAVF,CADF,CADF;AAkBD,CAnBD;;AAqBA,iEAAeC,MAAf;;;;;;;;;;;;;;;;;;;;;;;ACzBA;AACA;AACA;AAEA;AACA;AAEA;;AAEA,MAAMG,IAAI,GAAG,CAAC;EAAEC,WAAF;EAAeC;AAAf,CAAD,KAA2B;EACtC,MAAM;IAAEC;EAAF,IAAUF,WAAhB;EACA,MAAM;IAAEG,KAAF;IAASC,UAAT;IAAqBC;EAArB,IAA+BJ,IAAI,CAACK,MAA1C,CAFsC,CAGtC;;EACA,MAAMC,SAAS,GAAI,qBAAoBL,GAAI,GAA3C;EAEAM,OAAO,CAACC,GAAR,CAAYJ,KAAZ;EAEA,oBACE,uIACE,2DAAC,0DAAD,OADF,eAEE;IAAM,SAAS,EAAG,GAAEV,wDAAiB,IAAGA,mDAAY;EAApD,gBACE,uEAAKY,SAAL,CADF,eAEE,uEACGJ,KAAK,CAACS,GAAN,CAAU,CAAC;IAAEC;EAAF,CAAD,KAAc;IACvB,MAAM;MAAEC;IAAF,IAAWD,IAAjB;IACA,MAAM;MAAEE,KAAF;MAASC;IAAT,IAAiBH,IAAI,CAACI,WAA5B;IACA,oBACE;MAAI,GAAG,EAAEH;IAAT,gBACE,2DAAC,wCAAD;MAAM,EAAE,EAAG,IAAGE,GAAI;IAAlB,GAAsBD,KAAtB,CADF,CADF;EAKD,CARA,CADH,CAFF,eAaE,2DAAC,wCAAD;IAAM,EAAE,EAAC,OAAT;IAAiB,SAAS,EAAEpB,qDAAauB;EAAzC,gIAbF,CAFF,eAmBE,2DAAC,0DAAD,OAnBF,CADF;AAuBD,CA/BD;;AAiCAnB,IAAI,CAACoB,SAAL,GAAiB;EACfnB,WAAW,EAAEF,uDAAA,CAAgB;IAC3BI,GAAG,EAAEJ,qEAA2BwB;EADL,CAAhB,CADE;EAIfrB,IAAI,EAAEH,uDAAA,CAAgB;IACpBQ,MAAM,EAAER,uDAAA,CAAgB;MACtBM,UAAU,EAAEN,qEADU;MAEtBK,KAAK,EAAEL,yDAAA,CACLA,uDAAA,CAAgB;QACde,IAAI,EAAEf,uDAAA,CAAgB;UACpBmB,WAAW,EAAEnB,uDAAA,CAAgB;YAC3BiB,KAAK,EAAEjB,qEAA2BwB;UADP,CAAhB,CADO;UAIpBG,MAAM,EAAE3B,uDAAA,CAAgB;YACtBgB,IAAI,EAAEhB,qEAA2BwB;UADX,CAAhB;QAJY,CAAhB;MADQ,CAAhB,EASGA,UAVE;IAFe,CAAhB;EADY,CAAhB;AAJS,CAAjB;AAuBA,iEAAevB,IAAf;AAEO,MAAM2B,SAAS,eAAf","sources":["webpack://ssss/./src/components/footer.module.scss","webpack://ssss/./src/components/header.module.scss","webpack://ssss/./src/templates/tags.module.scss","webpack://ssss/./src/components/footer.js","webpack://ssss/./src/components/header.js","webpack://ssss/./src/templates/tags.js"],"sourcesContent":["// Exports\n","// Exports\nexport var activeLink = \"header-module--active-link--99V7O\";\n","// Exports\nexport var container = \"tags-module--container--y0P9s\";\nexport var page = \"tags-module--page--zWtSW\";\nexport var button = \"tags-module--button--izIBe\";\n","import * as React from 'react';\n\nimport './footer.module.scss';\n\nconst Footer = () => (\n  <footer>\n    <p>\n      –°–¥–µ–ª–∞–ª —Å üíú{' '}\n      <a href=\"https://timoshchuk.ru\" rel=\"noreferrer\" target=\"_blank\">\n        –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –¢–∏–º–æ—â—É–∫\n      </a>\n    </p>\n  </footer>\n);\n\nexport default Footer;\n","import * as React from 'react';\nimport { Link } from 'gatsby';\nimport * as styles from '../components/header.module.scss';\n\nconst Header = () => {\n  return (\n    <header>\n      <nav>\n        <Link activeClassName={styles.activeLink} to=\"/\">\n          –û–±–æ –º–Ω–µ\n        </Link>\n        <Link activeClassName={styles.activeLink} to=\"/blog\">\n          –°—Ç–∞—Ç—å–∏\n        </Link>\n        <Link activeClassName={styles.activeLink} to=\"/tags\">\n          –†—É–±—Ä–∏–∫–∏\n        </Link>\n        <Link activeClassName={styles.activeLink} to=\"/contacts\">\n          –ö–æ–Ω—Ç–∞–∫—Ç—ã\n        </Link>\n      </nav>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, graphql } from 'gatsby';\n\nimport Header from '../components/header';\nimport Footer from '../components/footer';\n\nimport * as styles from './tags.module.scss';\n\nconst Tags = ({ pageContext, data }) => {\n  const { tag } = pageContext;\n  const { edges, totalCount, nodes } = data.allMdx;\n  // const tagHeader = `${totalCount} ${totalCount === 1 ? '–∑–∞–ø–∏—Å—å' : '–∑–∞–ø–∏—Å–∏'} tagged with \"${tag}\"`;\n  const tagHeader = `–ó–∞–ø–∏—Å–∏ –≤ —Ä—É–±—Ä–∏–∫–µ ¬´${tag}¬ª`;\n\n  console.log(nodes);\n\n  return (\n    <>\n      <Header />\n      <main className={`${styles.container} ${styles.page}`}>\n        <h1>{tagHeader}</h1>\n        <ul>\n          {edges.map(({ node }) => {\n            const { slug } = node;\n            const { title, url } = node.frontmatter;\n            return (\n              <li key={slug}>\n                <Link to={`/${url}`}>{title}</Link>\n              </li>\n            );\n          })}\n        </ul>\n        <Link to=\"/tags\" className={styles.button}>\n          –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ —Ä—É–±—Ä–∏–∫–∏\n        </Link>\n      </main>\n      <Footer />\n    </>\n  );\n};\n\nTags.propTypes = {\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allMdx: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n            }),\n            fields: PropTypes.shape({\n              slug: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired,\n      ),\n    }),\n  }),\n};\n\nexport default Tags;\n\nexport const pageQuery = graphql`\n  query ($tag: String) {\n    allMdx(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          slug\n          frontmatter {\n            title\n            url\n          }\n        }\n      }\n      nodes {\n        frontmatter {\n          title\n          url\n        }\n      }\n    }\n  }\n`;\n"],"names":["React","Footer","Link","styles","Header","activeLink","PropTypes","Tags","pageContext","data","tag","edges","totalCount","nodes","allMdx","tagHeader","console","log","container","page","map","node","slug","title","url","frontmatter","button","propTypes","shape","string","isRequired","number","arrayOf","fields","pageQuery"],"sourceRoot":""}